name: Build iOS App

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual run

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1' # Specify your Flutter version; adjust as needed
        channel: 'stable'

    - name: Cache Flutter Pub
      uses: actions/cache@v4
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-cache-

    - name: Cache CocoaPods
      uses: actions/cache@v4
      with:
        path: ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: List project files (for debugging)
      run: |
        echo "=== Project Structure ==="
        find . -name "*.xcodeproj" -o -name "*.xcworkspace" | head -10

    - name: Get Flutter dependencies
      run: |
        flutter pub get

    - name: Install iOS 18.0 Simulator Runtime
      run: |
        echo "Attempting to download iOS 18.0 runtime..."
        sudo xcodebuild -downloadPlatform iOS -buildVersion 18.0
        # Wait for the download to complete (up to 10 minutes)
        for i in {1..60}; do
          if xcrun simctl list | grep -q "iOS 18.0"; then
            echo "iOS 18.0 runtime installed."
            break
          fi
          echo "Waiting for iOS 18.0 runtime... ($i/60)"
          sleep 10
          if [ $i -eq 60 ]; then
            echo "Timeout: iOS 18.0 runtime not detected. Check available runtimes with 'xcrun simctl list'."
            exit 1
          fi
        done

    - name: Install CocoaPods (if needed)
      run: |
        if [ -f "ios/Podfile" ]; then
          sudo gem install cocoapods
          pod install --project-directory=ios
        fi

    - name: Build Flutter iOS
      run: |
        flutter build ios --simulator --no-codesign

    - name: Copy .app for Upload
      run: |
        APP_PATH="build/ios/iphonesimulator/Runner.app"
        if [ -d "$APP_PATH" ]; then
          echo "Found app at: $APP_PATH"
          cp -r "$APP_PATH" "./Runner.app"
          echo "Copied to: ./Runner.app"
        else
          echo "No .app file found at $APP_PATH!"
          exit 1
        fi

    - name: Upload App
      uses: actions/upload-artifact@v4
      with:
        name: iOS-App-Simulator-${{ github.sha }}
        path: "Runner.app"
        retention-days: 30